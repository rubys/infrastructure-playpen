#!/usr/bin/env ruby

#
# provision a VM using the puppet manifests and modules from
# apache/infrastructure-puppet into a local vagrant VM
#

require 'fileutils'
require 'yaml'
require 'erb'
require 'deep_merge'

hostname = ARGV[0] || 'whimsy-vm3'

# find infrastructure-puppet
begin
  ip = File.realpath('infrastructure-puppet')
rescue Errno::ENOENT
  require 'whimsy/asf'
  ip = ASF::Git['infrastructure-puppet']
end

# utility method to update a file
def update_file(filename, contents)
  FileUtils.mkdir_p File.dirname(filename) if filename.include? '/'

  unless File.exist?(filename) and File.read(filename) == contents
    File.write(filename, contents)
  end
end

# read config file
config = YAML.load_file(__FILE__ + '.yaml')
config['classes'].deep_merge! config[hostname]['classes']

# create directories
FileUtils.mkdir_p hostname
Dir.chdir hostname
config['directories'].each {|dir| FileUtils.mkdir_p dir}

# create files
config['files'].each do |file, contents|
  contents = ERB.new(contents).result()
  update_file file, contents
end

# copy manifests/site.pp
File.write "manifests/site.pp", File.read("#{ip}/manifests/site.pp")

# filter hiera.yaml
hiera = YAML.load(File.read("#{ip}/hiera.yaml").gsub('%{asfcolo}', 'vagrant'))
hiera[:backends].delete 'eyaml'
hiera.delete(:eyaml)
hiera[:yaml][:datadir] = '/vagrant/data'
update_file "hiera.yaml", YAML.dump(hiera)

# copy colo
colo = YAML.load(File.read("#{ip}/data/colo/vagrant.yaml"))
update_file "data/colo/vagrant.yaml", YAML.dump(colo)

# read infrastructure-puppet
node = YAML.load_file("#{ip}/data/nodes/#{hostname}.apache.org.yaml")

# remove classes
node['classes'].delete_if do |name|
  config['classes']['remove'].include? name.split(':').first
end

# adjust vhosts
vhosts = node['vhosts_whimsy::vhosts::vhosts']
vhosts['whimsy-vm-80'] = vhosts['whimsy-vm-443']
vhosts['whimsy-vm-80']['port'] = 80
vhosts['whimsy-vm-80']['ssl'] = false
vhosts['whimsy-vm-80'].delete('ssl_cert')
vhosts['whimsy-vm-80'].delete('ssl_key')
vhosts['whimsy-vm-80'].delete('ssl_chain')
vhosts.delete('whimsy-vm-443')

# output data node
update_file "data/nodes/#{hostname}.apache.org.yaml", YAML.dump(node)

osname = config[hostname]['box']
osname.sub! 'trusty64', '1404'

# copy and filter os.yaml
os = YAML.load_file("#{ip}/data/#{osname}.yaml")
os.delete 'apache::log_formats' ##TODO
os['classes'].delete_if do |name|
  config['classes']['remove'].include? name.split(':').first
end
update_file "data/#{osname}.yaml", YAML.dump(os)

# copy and filter common.yaml
common = YAML.load_file("#{ip}/data/common.yaml")
common['classes'].delete_if do |name|
  config['classes']['remove'].include? name.split(':').first
end
update_file "data/common.yaml", YAML.dump(common)

# create modules
classes = config['classes']['add']
[node, os, common].each do |level|
  classes += level['classes'].map {|c| c.split(':').first}
end
classes.uniq.each do |name|
  Dir["#{ip}/{modules,3rdParty}/#{name}"].each do |path|
    system 'rsync', '-a', path, 'modules'
  end
end

# provision updates
if `vagrant status`.include? 'running'
  system 'vagrant provision'
else
  system 'vagrant up'
end
